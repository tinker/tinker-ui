#!/usr/bin/env node

var fs = require('fs'),
	path = require('path'),
	sass = require('node-sass'),
	wrup = require('wrapup')();

/**
 * Watch a directory for changes with a small timeout
 */
var watchDir = function(dir, cb){
	var timeouts = {};
	fs.watch(dir, function(event, filename){
		if (!filename) return;
		if (timeouts[filename]){
			clearTimeout(timeouts[filename]);
		}
		timeouts[filename] = setTimeout(function(){
			cb(filename);
		}, 10);
	});
};

var args = process.argv.splice(1);
if (!args[1] || !fs.statSync(args[1]).isDirectory()) {
	console.log('Please specify a directory to put the built files');
	process.exit(1);
}

console.log('Watching for changes...');

var src = path.normalize(__dirname + '/../src'),
	dest = path.resolve(args[1]);

// javascript
wrup
	.require('tinker', src + '/js/tinker.js')
	.options({globalize: 'window'})
	.watch('browser')
	.on('data', function(js){
		fs.writeFile(dest + '/tinker.app.js', js, function(err){
			if (err){
				console.log(err);
			} else {
				console.log(' - JS compiled to ' + dest + '/tinker.app.js');
			}
		});
	});

// stylesheets
watchDir(src + '/css', function(){
	sass.render({
		file: src + '/css/app.scss',
		success: function(css){
			fs.writeFile(dest + '/tinker.app.css', css, function(err){
				if (err){
					console.log(err);
				} else {
					console.log(' - CSS compiled to ' + dest + '/tinker.app.css');
				}
			});
		},
		error: function(err){
			console.log(err);
		}
	});
});
